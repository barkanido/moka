name: CI

on:
  push:
    paths-ignore:
    - '.devcontainer/**'
    - '.gitpod.yml'
    - '.vscode/**'
  pull_request:
    paths-ignore:
    - '.devcontainer/**'
    - '.gitpod.yml'
    - '.vscode/**'
  schedule:
    # Run against the last commit on the default branch on Friday at 8pm (UTC?)
    - cron:  '0 20 * * 5'

env:
  RUSTFLAGS: '--cfg skeptic'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - 1.46.0  # MSRV (future)
          - 1.45.2  # MSRV (no features)

    steps:
      - name: Checkout Moka
        uses: actions/checkout@v2

      - name: Edit Cargo.toml (MSRV 1.45.2)
        # Use the following dependency version(s) for the MSRV:
        # - bitflags v1.2.1 (2019-10-14), because v1.3.1 (2021-08-12) requires Rust 1.46.
        #   https://github.com/moka-rs/moka/pull/25
        run: |
          echo '[patch.crates-io]\nbitflags = { git = "https://github.com/bitflags/bitflags", tag = "1.2.1" }' >> Cargo.toml
        if: ${{ matrix.rust == '1.45.2' }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Build (no features)
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Run tests (no features)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release

      - name: Run tests (future)
        uses: actions-rs/cargo@v1
        if: ${{ matrix.rust != '1.45.2' }}
        with:
          command: test
          args: --release --features future

      - name: Run Rustfmt
        uses: actions-rs/cargo@v1
        if: ${{ matrix.rust == 'stable' }}
        with:
          command: fmt
          args: --all -- --check

      - name: Run Clippy
        uses: actions-rs/clippy-check@v1
        if: ${{ matrix.rust == 'stable' || matrix.rust == 'beta' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --features future -- -D warnings
